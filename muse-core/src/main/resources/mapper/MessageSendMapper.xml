<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.muse.manager.message.mapper.MessageSendMapper">
  <resultMap id="BaseResultMap" type="com.muse.manager.message.model.MessageSend">
    <!--@mbg.generated-->
    <!--@Table muse.message_send-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="uid" jdbcType="BIGINT" property="uid" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="param_template_id" jdbcType="BIGINT" property="paramTemplateId" />
    <result column="receiver_template_id" jdbcType="BIGINT" property="receiverTemplateId" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="step" jdbcType="INTEGER" property="step" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="valid" jdbcType="BIT" property="valid" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.muse.manager.message.model.MessageSend">
    <!--@mbg.generated-->
    <!--@Table muse.message_send-->
    <result column="param_json" jdbcType="LONGVARCHAR" property="paramJson" />
    <result column="receiver_json" jdbcType="LONGVARCHAR" property="receiverJson" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `uid`, `name`, `type`, param_template_id, receiver_template_id, `status`, step, 
    create_time, update_time, `valid`, remark
  </sql>
  <sql id="Blob_Column_List">
    <!--@mbg.generated-->
    param_json, receiver_json
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.muse.manager.message.model.MessageSendExample" resultMap="ResultMapWithBLOBs">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from muse.message_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.muse.manager.message.model.MessageSendExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from muse.message_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from muse.message_send
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from muse.message_send
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.muse.manager.message.model.MessageSendExample">
    <!--@mbg.generated-->
    delete from muse.message_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.muse.manager.message.model.MessageSend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send (`uid`, `name`, `type`, 
      param_template_id, receiver_template_id, `status`, 
      step, create_time, update_time, 
      `valid`, remark, param_json, 
      receiver_json)
    values (#{uid,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{paramTemplateId,jdbcType=BIGINT}, #{receiverTemplateId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, 
      #{step,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{valid,jdbcType=BIT}, #{remark,jdbcType=VARCHAR}, #{paramJson,jdbcType=LONGVARCHAR}, 
      #{receiverJson,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.muse.manager.message.model.MessageSend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        `uid`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="paramTemplateId != null">
        param_template_id,
      </if>
      <if test="receiverTemplateId != null">
        receiver_template_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="step != null">
        step,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="paramJson != null">
        param_json,
      </if>
      <if test="receiverJson != null">
        receiver_json,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="paramTemplateId != null">
        #{paramTemplateId,jdbcType=BIGINT},
      </if>
      <if test="receiverTemplateId != null">
        #{receiverTemplateId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        #{step,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paramJson != null">
        #{paramJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="receiverJson != null">
        #{receiverJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.muse.manager.message.model.MessageSendExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from muse.message_send
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update muse.message_send
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.uid != null">
        `uid` = #{record.uid,jdbcType=BIGINT},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.paramTemplateId != null">
        param_template_id = #{record.paramTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.receiverTemplateId != null">
        receiver_template_id = #{record.receiverTemplateId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.step != null">
        step = #{record.step,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.valid != null">
        `valid` = #{record.valid,jdbcType=BIT},
      </if>
      <if test="record.remark != null">
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.paramJson != null">
        param_json = #{record.paramJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.receiverJson != null">
        receiver_json = #{record.receiverJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    <!--@mbg.generated-->
    update muse.message_send
    set id = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      param_template_id = #{record.paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{record.receiverTemplateId,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=INTEGER},
      step = #{record.step,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      `valid` = #{record.valid,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR},
      param_json = #{record.paramJson,jdbcType=LONGVARCHAR},
      receiver_json = #{record.receiverJson,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update muse.message_send
    set id = #{record.id,jdbcType=BIGINT},
      `uid` = #{record.uid,jdbcType=BIGINT},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      param_template_id = #{record.paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{record.receiverTemplateId,jdbcType=BIGINT},
      `status` = #{record.status,jdbcType=INTEGER},
      step = #{record.step,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      `valid` = #{record.valid,jdbcType=BIT},
      remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.muse.manager.message.model.MessageSend">
    <!--@mbg.generated-->
    update muse.message_send
    <set>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="paramTemplateId != null">
        param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      </if>
      <if test="receiverTemplateId != null">
        receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        step = #{step,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paramJson != null">
        param_json = #{paramJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="receiverJson != null">
        receiver_json = #{receiverJson,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.muse.manager.message.model.MessageSend">
    <!--@mbg.generated-->
    update muse.message_send
    set `uid` = #{uid,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER},
      step = #{step,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      param_json = #{paramJson,jdbcType=LONGVARCHAR},
      receiver_json = #{receiverJson,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.muse.manager.message.model.MessageSend">
    <!--@mbg.generated-->
    update muse.message_send
    set `uid` = #{uid,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER},
      step = #{step,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update muse.message_send
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="`uid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.uid,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="`type` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.type,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="param_template_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.paramTemplateId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="receiver_template_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.receiverTemplateId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`status` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.status,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="step = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.step,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="update_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.updateTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="`valid` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.valid,jdbcType=BIT}
        </foreach>
      </trim>
      <trim prefix="remark = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.remark,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="param_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.paramJson,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
      <trim prefix="receiver_json = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.receiverJson,jdbcType=LONGVARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send
    (`uid`, `name`, `type`, param_template_id, receiver_template_id, `status`, step, 
      create_time, update_time, `valid`, remark, param_json, receiver_json)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.uid,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, 
        #{item.paramTemplateId,jdbcType=BIGINT}, #{item.receiverTemplateId,jdbcType=BIGINT}, 
        #{item.status,jdbcType=INTEGER}, #{item.step,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.valid,jdbcType=BIT}, #{item.remark,jdbcType=VARCHAR}, 
        #{item.paramJson,jdbcType=LONGVARCHAR}, #{item.receiverJson,jdbcType=LONGVARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.muse.manager.message.model.MessageSend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `uid`,
      `name`,
      `type`,
      param_template_id,
      receiver_template_id,
      `status`,
      step,
      create_time,
      update_time,
      `valid`,
      remark,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{uid,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER},
      #{paramTemplateId,jdbcType=BIGINT},
      #{receiverTemplateId,jdbcType=BIGINT},
      #{status,jdbcType=INTEGER},
      #{step,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{valid,jdbcType=BIT},
      #{remark,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      `uid` = #{uid,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER},
      step = #{step,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateWithBLOBs" keyColumn="id" keyProperty="id" parameterType="com.muse.manager.message.model.MessageSend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      `uid`,
      `name`,
      `type`,
      param_template_id,
      receiver_template_id,
      `status`,
      step,
      create_time,
      update_time,
      `valid`,
      remark,
      param_json,
      receiver_json,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{uid,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR},
      #{type,jdbcType=INTEGER},
      #{paramTemplateId,jdbcType=BIGINT},
      #{receiverTemplateId,jdbcType=BIGINT},
      #{status,jdbcType=INTEGER},
      #{step,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP},
      #{valid,jdbcType=BIT},
      #{remark,jdbcType=VARCHAR},
      #{paramJson,jdbcType=LONGVARCHAR},
      #{receiverJson,jdbcType=LONGVARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      `uid` = #{uid,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      `status` = #{status,jdbcType=INTEGER},
      step = #{step,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      `valid` = #{valid,jdbcType=BIT},
      remark = #{remark,jdbcType=VARCHAR},
      param_json = #{paramJson,jdbcType=LONGVARCHAR},
      receiver_json = #{receiverJson,jdbcType=LONGVARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.muse.manager.message.model.MessageSend" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into muse.message_send
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="uid != null">
        `uid`,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="paramTemplateId != null">
        param_template_id,
      </if>
      <if test="receiverTemplateId != null">
        receiver_template_id,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="step != null">
        step,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="valid != null">
        `valid`,
      </if>
      <if test="remark != null">
        remark,
      </if>
      <if test="paramJson != null">
        param_json,
      </if>
      <if test="receiverJson != null">
        receiver_json,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="paramTemplateId != null">
        #{paramTemplateId,jdbcType=BIGINT},
      </if>
      <if test="receiverTemplateId != null">
        #{receiverTemplateId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        #{step,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        #{valid,jdbcType=BIT},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paramJson != null">
        #{paramJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="receiverJson != null">
        #{receiverJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="uid != null">
        `uid` = #{uid,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="paramTemplateId != null">
        param_template_id = #{paramTemplateId,jdbcType=BIGINT},
      </if>
      <if test="receiverTemplateId != null">
        receiver_template_id = #{receiverTemplateId,jdbcType=BIGINT},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="step != null">
        step = #{step,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="valid != null">
        `valid` = #{valid,jdbcType=BIT},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="paramJson != null">
        param_json = #{paramJson,jdbcType=LONGVARCHAR},
      </if>
      <if test="receiverJson != null">
        receiver_json = #{receiverJson,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
</mapper>